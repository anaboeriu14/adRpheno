% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_models_by_group.R
\name{fit_group_models}
\alias{fit_group_models}
\title{Fit Linear Models Across Outcomes and Groups}
\usage{
fit_group_models(
  data,
  outcomes,
  base_predictors,
  group_col = "superpop",
  groups = "All",
  model_type = "main",
  outcome_covariates = NULL,
  group_covariates = NULL
)
}
\arguments{
\item{data}{A data frame containing the variables for analysis}

\item{outcomes}{Character vector of outcome variable names to model}

\item{base_predictors}{Character vector of predictor variable names to include in all models}

\item{group_col}{Character string specifying the column name for grouping variable. Default is "superpop"}

\item{groups}{Character vector specifying which groups to analyze. Use "All" to include all data without grouping. Default is "All"}

\item{model_type}{Character string specifying the model type. Must be one of: "main", "interaction", "nested", or "stratified". Default is "main"}

\item{outcome_covariates}{Optional named list of additional covariates specific to certain outcomes.
Keys should be outcome names, values should be character vectors of covariate names.}

\item{group_covariates}{Optional named list of additional covariates specific to certain groups.
Keys should be group names, values should be character vectors of covariate names.}
}
\value{
A tibble with the following columns:
\describe{
\item{outcome}{The outcome variable name}
\item{superpop}{The group being analyzed}
\item{model}{The model type specified}
\item{predictors}{The full predictor formula string used}
\item{model_equation}{The complete model equation (outcome ~ predictors)}
\item{res}{List column containing the fitted lm objects}
\item{dataf}{List column containing tidy model results from broom::tidy()}
\item{n_obs}{Number of observations used in each model}
}
}
\description{
Fits linear models for multiple outcomes across different groups (e.g., ancestry, sex,
treatment groups, etc.) with flexible covariate specifications.
Allows for outcome-specific and group-specific covariates to be added to base predictors.
}
\examples{
\dontrun{
# Simple biomarker analysis across ancestry groups
bio_results <- fit_group_models(
  data = your_data,
  outcomes = c("verbal_ability", "memory"),
  base_predictors = c("age", "id_gender", "apoe_risk_group"),
  groups = c("AFR", "EUR", "AMR")
)

# Biomarker analysis with outcome-specific covariates
bio_results <- fit_group_models(
  data = your_data,
  outcomes = c("tau", "ab42_ab40", "ptau", "nfl"),
  base_predictors = c("age", "id_gender", "apoe_risk_group"),
  groups = c("AFR", "EUR", "AMR"),
  outcome_covariates = list(
    "tau" = c("i_bmi", "eGFR"),
    "ab42_ab40" = c("i_bmi", "eGFR"),
    "ptau" = c("i_bmi", "eGFR"),
    "nfl" = c("i_bmi", "eGFR")
  )
)

# Imaging analysis with group-specific adjustments
img_results <- fit_group_models(
  data = your_data,
  outcomes = c("meta_roi", "z_hippcampul_vol"),
  base_predictors = c("age", "id_gender", "icv", "apoe_risk_group"),
  groups = c("AFR", "EUR", "AMR"),
  group_covariates = list(
    "EUR" = "mri_scanner",
    "AMR" = "mri_scanner"
  )
)

# Analysis combining both outcome and group specific covariates
mixed_results <- fit_group_models(
  data = your_data,
  outcomes = c("mmse_total", "cdr_sum"),
  base_predictors = c("age", "id_gender", "apoe_risk_group"),
  groups = c("AFR", "EUR", "AMR"),
  outcome_covariates = list(
    "mmse_total" = "id_education",
    "cdr_sum" = "id_education"
  ),
  group_covariates = list(
    "EUR" = "interview_language",
    "AMR" = "interview_language"
  )
)

# Analysis without grouping (all data combined)
all_results <- fit_group_models(
  data = your_data,
  outcomes = c("tau", "ptau"),
  base_predictors = c("age", "id_gender", "ancestry", "apoe_risk_group")
)
}
}
