% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apoe_genetics.R
\name{validate_apoe_e4_status}
\alias{validate_apoe_e4_status}
\title{Validate APOE e4 carrier status}
\usage{
validate_apoe_e4_status(
  dataf,
  genotype,
  e4_positive,
  return_all = FALSE,
  true_values = c(1, "1", "yes", "y", "true", "t"),
  false_values = c(0, "0", "no", "n", "false", "f"),
  genotype_format = c("standard", "numeric", "slash")
)
}
\arguments{
\item{dataf}{A data frame containing APOE genotypes and e4 carrier status}

\item{genotype}{The name of the APOE genotype column}

\item{e4_positive}{The name of the e4 carrier status column}

\item{return_all}{Logical, if TRUE returns the entire dataset with a validation column (default: FALSE)}

\item{true_values}{Vector of values that represent e4 positive status (default: c(1, "1", "yes", "y", "true", "t"))}

\item{false_values}{Vector of values that represent e4 negative status (default: c(0, "0", "no", "n", "false", "f"))}

\item{genotype_format}{String indicating the format of the genotype column. Options: "standard" (default: E2E3),
"numeric" (e.g., 23, 34), or "slash" (e.g., e2/e3)}
}
\value{
If mismatches found and return_all=FALSE: returns a data frame of mismatched records
If mismatches found and return_all=TRUE: returns the entire data frame with added 'standardized_genotype'
and 'e4_status_valid' columns
If no mismatches found: returns message "No mismatches found"
}
\description{
Validate APOE e4 carrier status
}
\details{
APOE e4 carrier status should be assigned to genotypes containing e4: e2/e4, e3/e4, e4/e4
All other genotypes should be e4 negative.

The function handles multiple formats of genotype data:
\itemize{
\item Standard format: E2E3, e2e4, E3E4, etc.
\item Numeric format: 23, 34, 44, etc.
\item Slash format: e2/e3, E3/E4, etc.
}

The function also handles various representations of e4 positive/negative status:
\itemize{
\item Binary: 0/1
\item Text: yes/no, y/n, true/false, t/f (case-insensitive)
}
}
\examples{
# Standard format with binary e4 status
test_data1 <- data.frame(
  subject_id = c("S001", "S002", "S003"),
  apoe_genotype = c("E2E4", "E3E3", "E3E4"),
  e4_status = c(1, 0, 1)
)
validate_apoe_e4_status(test_data1, "apoe_genotype", "e4_status")

# Yes/No format with slash genotypes
test_data2 <- data.frame(
  subject_id = c("S001", "S002", "S003"),
  apoe_alleles = c("e2/e4", "e3/e3", "e3/e4"),
  e4_carrier = c("Yes", "No", "No")  # Note: S003 is incorrectly labeled
)
validate_apoe_e4_status(test_data2, "apoe_alleles", "e4_carrier",
                        genotype_format = "slash")

# Numeric format genotypes
test_data3 <- data.frame(
  subject_id = c("S001", "S002", "S003"),
  apoe_numeric = c("24", "33", "34"),
  has_e4 = c("TRUE", "FALSE", "TRUE")
)
validate_apoe_e4_status(test_data3, "apoe_numeric", "has_e4",
                        genotype_format = "numeric")
}
